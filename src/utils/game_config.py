from pathlib import Path
from typing import Union

from src.utils.game_info import get_py_script_path

import tomli, tomlkit
from tomlkit import comment, document, nl, table, dump

def create_dossier_config() -> None:
	doc = document()
	doc.add(comment('The main config file for Dossier. Edit with caution!'))
	settings = table()
	settings.add('symlink_ddlc_to_mods', False)
	doc.add('settings', settings)
	default_options = table()
	default_options.add('renpy_save_dir', False)
	default_options.add('skip_splash_scr', False)
	default_options.add('skip_main_menu', False)
	default_options.add('discord_rpc', False)
	doc.add('default_options', default_options)

	config_path = Path.cwd() / 'config.toml'
	with open(config_path, 'w') as f:
		tomlkit.dump(doc, f)	
	log.debug('Created "config.toml"')

def create_game_config(game_path: Path) -> None:
	config_path = game_path / 'game' / 'config.toml'

	doc = document()
	doc.add(comment(f'Config file generated by Dossier, for {py_script.stem}. Edit with causion!'))
	info = table()
	if game_path.name == 'base':
		info.add('nickname', 'Doki Doki Literature Club')
	else:
		info.add('nickname', '')
	info.add('date_created', time.time())
	info.add('date_last_played', 0)
	info.add('playtime', 0)
	doc.add('info', info)
	options = table()
	options.add('renpy_save_dir', '')
	options.add('renpy_save_slot', 1)
	options.add('custom_save_dir', '')
	options.add('skip_splash_scr', '')
	options.add('skip_main_menu', '')
	options.add('discord_rpc', '')
	doc.add('options', options)

	with open(config_path, 'w') as f:
		tomlkit.dump(doc, f)
	log.debug('Created "config.toml"')

def set_game_config_value(game_path: Path, key: str, value: Union[bool, int, float, str]) -> None:
	config_path = game_path / 'game' / 'config.toml'
	if not config_path.exists():
		raise FileNotFoundError(f'{get_py_script_path(game_dir)}\'s config file does not exist!')

	with open(config_path, 'rb') as f:
		config_data = tomli.load(f)

	if key == 'nickname' or key == 'date_last_played' or key == 'playtime':
		category = 'info'
	else:
		category = 'options'

	config_data[category][key] = value

	with open(config_path, 'w') as f:
		tomlkit.dump(config_data, f)
	log.debug(f'Edited {get_py_script_path(game_dir)}\'s config! ({key}: {value})')

def parse_game_config(game_path: Path) -> dict:
	dossier_config_path = Path.cwd() / 'config.toml'
	game_config_path = game_path / 'game' / 'config.toml'

	with open(dossier_config_path, 'rb') as f:
		dossier_config_data = tomli.load(f)
	with open(game_config_path, 'rb') as f:
		game_config_data = tomli.load(f)

	for option in ('renpy_save_dir', 'skip_splash_scr', 'skip_main_menu', 'discord_rpc'):
		if game_config_data['options'][option] == '':
			game_config_data['options'][option] = dossier_config_data['default_options'][option]
	if game_config_data['info']['nickname'] == '':
		game_config_data['info']['nickname'] = game_path.name

	return game_config_data
